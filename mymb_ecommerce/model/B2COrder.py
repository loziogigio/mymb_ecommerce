from sqlalchemy import Column, BigInteger, String, Float, DateTime, Boolean, Date, Integer
from sqlalchemy.ext.declarative import declarative_base

Base = declarative_base()

class B2COrder(Base):
    __tablename__ = 'orders'

    order_id = Column(BigInteger, primary_key=True, autoincrement=True)
    external_ref = Column(String(100))
    uid = Column(BigInteger)
    email = Column(String(150), nullable=False, index=True)
    payment_method = Column(String(50), nullable=False)
    status = Column(String(255), nullable=False)
    currency = Column(String(10), nullable=False)
    total_amount = Column(Float, nullable=False)
    creation_date = Column(DateTime, nullable=False, index=True, server_default='CURRENT_TIMESTAMP')
    modify_date = Column(DateTime)
    billing_profile_id = Column(BigInteger)
    billing_country = Column(String(50), nullable=False)
    billing_prov = Column(String(50), nullable=False)
    billing_city = Column(String(50), nullable=False)
    billing_address = Column(String(250), nullable=False)
    billing_postalcode = Column(String(50), nullable=False)
    billing_phone = Column(String(50))
    billing_name = Column(String(250), nullable=False, index=True)
    billing_company = Column(String(250), index=True)
    billing_vat = Column(String(50), index=True)
    billing_pec = Column(String(100))
    billing_sdi = Column(String(100))
    invoice_required = Column(Boolean, nullable=False, default=False)
    private_invoice = Column(Boolean, default=False)
    codfisc = Column(String(50))
    shipping_profile_id = Column(BigInteger)
    shipping_country = Column(String(50), nullable=False)
    shipping_prov = Column(String(50), nullable=False)
    shipping_city = Column(String(50), nullable=False)
    shipping_address = Column(String(250), nullable=False)
    shipping_postalcode = Column(String(50), nullable=False)
    shipping_phone = Column(String(50))
    shipping_name = Column(String(250), nullable=False, index=True)
    channel_id = Column(String(10), nullable=False, index=True)
    bdeli = Column(String(1), default="N")
    berro_ddeli = Column(String(1), default="N")
    terro_ddeli = Column(String(1000))
    dprim_ddeli = Column(DateTime)
    dulti_ddeli = Column(DateTime)
    nnume_ddeli = Column(Integer)
    oelen_dbmsx = Column(Integer)
    bproc = Column(String(1), default="N")
    berro_dproc = Column(String(1), default="N")
    terro_dproc = Column(String(1000))
    dprim_dproc = Column(DateTime)
    dulti_dproc = Column(DateTime)
    nnume_dproc = Column(Integer)
    ccaus_sdocu_g = Column(String(8), index=True)
    ycale_dgest = Column(Integer)
    nprot_ddocu_g = Column(Integer)
    mail_sent = Column(Integer, nullable=False, default=0)
    active = Column(Boolean, nullable=False, default=True)
    link_vett = Column(String(255))
    date_link_vett = Column(Date)
    mail_link_vett_sent = Column(Integer, default=0)
    receipt_mail_sent = Column(Integer, default=0)

    def to_dict(self):
        return {c.name: getattr(self, c.name) for c in self.__table__.columns}
